//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Braille_Shape_Generator_Client.ShapeGeneratorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShapeGeneratorService.Shape_Generator_ServiceSoap")]
    public interface Shape_Generator_ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Circle", ReplyAction="*")]
        double Circle(double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Circle", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CircleAsync(double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Triangle", ReplyAction="*")]
        double Triangle(double height, double width);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Triangle", ReplyAction="*")]
        System.Threading.Tasks.Task<double> TriangleAsync(double height, double width);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rectangle", ReplyAction="*")]
        double Rectangle(double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rectangle", ReplyAction="*")]
        System.Threading.Tasks.Task<double> RectangleAsync(double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Square", ReplyAction="*")]
        double Square(double length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Square", ReplyAction="*")]
        System.Threading.Tasks.Task<double> SquareAsync(double length);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Shape_Generator_ServiceSoapChannel : Braille_Shape_Generator_Client.ShapeGeneratorService.Shape_Generator_ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Shape_Generator_ServiceSoapClient : System.ServiceModel.ClientBase<Braille_Shape_Generator_Client.ShapeGeneratorService.Shape_Generator_ServiceSoap>, Braille_Shape_Generator_Client.ShapeGeneratorService.Shape_Generator_ServiceSoap {
        
        public Shape_Generator_ServiceSoapClient() {
        }
        
        public Shape_Generator_ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Shape_Generator_ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Shape_Generator_ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Shape_Generator_ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Circle(double radius) {
            return base.Channel.Circle(radius);
        }
        
        public System.Threading.Tasks.Task<double> CircleAsync(double radius) {
            return base.Channel.CircleAsync(radius);
        }
        
        public double Triangle(double height, double width) {
            return base.Channel.Triangle(height, width);
        }
        
        public System.Threading.Tasks.Task<double> TriangleAsync(double height, double width) {
            return base.Channel.TriangleAsync(height, width);
        }
        
        public double Rectangle(double width, double height) {
            return base.Channel.Rectangle(width, height);
        }
        
        public System.Threading.Tasks.Task<double> RectangleAsync(double width, double height) {
            return base.Channel.RectangleAsync(width, height);
        }
        
        public double Square(double length) {
            return base.Channel.Square(length);
        }
        
        public System.Threading.Tasks.Task<double> SquareAsync(double length) {
            return base.Channel.SquareAsync(length);
        }
    }
}
